/* Autogenerated with kurento-module-creator */

#ifndef __RTCRTPSTREAM_STATS_HPP__
#define __RTCRTPSTREAM_STATS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include "RTCStats.hpp"


namespace kurento
{
class RTCRTPStreamStats;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::RTCRTPStreamStats> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class RTCRTPStreamStats : public RTCStats
{

public:

  RTCRTPStreamStats (const std::string &id, std::shared_ptr<StatsType> type, double timestamp, int64_t timestampMillis, const std::string &ssrc, const std::string &associateStatsId, bool isRemote, const std::string &mediaTrackId, const std::string &transportId, const std::string &codecId, int64_t firCount, int64_t pliCount, int64_t nackCount, int64_t sliCount, int64_t remb, int64_t packetsLost, double fractionLost) : RTCStats (id, type, timestamp, timestampMillis) {
    this->ssrc = ssrc;
    this->associateStatsId = associateStatsId;
    this->isRemote = isRemote;
    this->mediaTrackId = mediaTrackId;
    this->transportId = transportId;
    this->codecId = codecId;
    this->firCount = firCount;
    this->pliCount = pliCount;
    this->nackCount = nackCount;
    this->sliCount = sliCount;
    this->remb = remb;
    this->packetsLost = packetsLost;
    this->fractionLost = fractionLost;
  };

  void setSsrc (const std::string &ssrc) {
    this->ssrc = ssrc;
  };

  std::string getSsrc () {
    return ssrc;
  };

  void setAssociateStatsId (const std::string &associateStatsId) {
    this->associateStatsId = associateStatsId;
  };

  std::string getAssociateStatsId () {
    return associateStatsId;
  };

  void setIsRemote (bool isRemote) {
    this->isRemote = isRemote;
  };

  bool getIsRemote () {
    return isRemote;
  };

  void setMediaTrackId (const std::string &mediaTrackId) {
    this->mediaTrackId = mediaTrackId;
  };

  std::string getMediaTrackId () {
    return mediaTrackId;
  };

  void setTransportId (const std::string &transportId) {
    this->transportId = transportId;
  };

  std::string getTransportId () {
    return transportId;
  };

  void setCodecId (const std::string &codecId) {
    this->codecId = codecId;
  };

  std::string getCodecId () {
    return codecId;
  };

  void setFirCount (int64_t firCount) {
    this->firCount = firCount;
  };

  int64_t getFirCount () {
    return firCount;
  };

  void setPliCount (int64_t pliCount) {
    this->pliCount = pliCount;
  };

  int64_t getPliCount () {
    return pliCount;
  };

  void setNackCount (int64_t nackCount) {
    this->nackCount = nackCount;
  };

  int64_t getNackCount () {
    return nackCount;
  };

  void setSliCount (int64_t sliCount) {
    this->sliCount = sliCount;
  };

  int64_t getSliCount () {
    return sliCount;
  };

  void setRemb (int64_t remb) {
    this->remb = remb;
  };

  int64_t getRemb () {
    return remb;
  };

  void setPacketsLost (int64_t packetsLost) {
    this->packetsLost = packetsLost;
  };

  int64_t getPacketsLost () {
    return packetsLost;
  };

  void setFractionLost (double fractionLost) {
    this->fractionLost = fractionLost;
  };

  double getFractionLost () {
    return fractionLost;
  };

  void Serialize (JsonSerializer &s) override;

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new RTCRTPStreamStats ();

    };

    RegisterParent::registerType ("kurento.RTCRTPStreamStats", func);
  }

protected:

  RTCRTPStreamStats() = default;

private:

  std::string ssrc;
  std::string associateStatsId;
  bool isRemote;
  std::string mediaTrackId;
  std::string transportId;
  std::string codecId;
  int64_t firCount;
  int64_t pliCount;
  int64_t nackCount;
  int64_t sliCount;
  int64_t remb;
  int64_t packetsLost;
  double fractionLost;

  friend void kurento::Serialize (std::shared_ptr<kurento::RTCRTPStreamStats> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __RTCRTPSTREAM_STATS_HPP__ */
