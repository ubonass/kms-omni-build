/* Autogenerated with kurento-module-creator */

#ifndef __RTCOUTBOUND_RTPSTREAM_STATS_HPP__
#define __RTCOUTBOUND_RTPSTREAM_STATS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include "RTCRTPStreamStats.hpp"


namespace kurento
{
class RTCOutboundRTPStreamStats;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::RTCOutboundRTPStreamStats> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class RTCOutboundRTPStreamStats : public RTCRTPStreamStats
{

public:

  RTCOutboundRTPStreamStats (const std::string &id, std::shared_ptr<StatsType> type, double timestamp, int64_t timestampMillis, const std::string &ssrc, const std::string &associateStatsId, bool isRemote, const std::string &mediaTrackId, const std::string &transportId, const std::string &codecId, int64_t firCount, int64_t pliCount, int64_t nackCount, int64_t sliCount, int64_t remb, int64_t packetsLost, double fractionLost, int64_t packetsSent, int64_t bytesSent, double targetBitrate, double roundTripTime) : RTCRTPStreamStats (id, type, timestamp, timestampMillis, ssrc, associateStatsId, isRemote, mediaTrackId, transportId, codecId, firCount, pliCount, nackCount, sliCount, remb, packetsLost, fractionLost) {
    this->packetsSent = packetsSent;
    this->bytesSent = bytesSent;
    this->targetBitrate = targetBitrate;
    this->roundTripTime = roundTripTime;
  };

  void setPacketsSent (int64_t packetsSent) {
    this->packetsSent = packetsSent;
  };

  int64_t getPacketsSent () {
    return packetsSent;
  };

  void setBytesSent (int64_t bytesSent) {
    this->bytesSent = bytesSent;
  };

  int64_t getBytesSent () {
    return bytesSent;
  };

  void setTargetBitrate (double targetBitrate) {
    this->targetBitrate = targetBitrate;
  };

  double getTargetBitrate () {
    return targetBitrate;
  };

  void setRoundTripTime (double roundTripTime) {
    this->roundTripTime = roundTripTime;
  };

  double getRoundTripTime () {
    return roundTripTime;
  };

  void Serialize (JsonSerializer &s) override;

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new RTCOutboundRTPStreamStats ();

    };

    RegisterParent::registerType ("kurento.RTCOutboundRTPStreamStats", func);
  }

protected:

  RTCOutboundRTPStreamStats() = default;

private:

  int64_t packetsSent;
  int64_t bytesSent;
  double targetBitrate;
  double roundTripTime;

  friend void kurento::Serialize (std::shared_ptr<kurento::RTCOutboundRTPStreamStats> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __RTCOUTBOUND_RTPSTREAM_STATS_HPP__ */
