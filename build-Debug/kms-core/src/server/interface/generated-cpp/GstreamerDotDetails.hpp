/* Autogenerated with kurento-module-creator */

#ifndef __GSTREAMER_DOT_DETAILS_HPP__
#define __GSTREAMER_DOT_DETAILS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>


namespace kurento
{
class GstreamerDotDetails;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::GstreamerDotDetails> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class GstreamerDotDetails
{

public:

  typedef enum {
    SHOW_MEDIA_TYPE,
    SHOW_CAPS_DETAILS,
    SHOW_NON_DEFAULT_PARAMS,
    SHOW_STATES,
    SHOW_FULL_PARAMS,
    SHOW_ALL,
    SHOW_VERBOSE
  } type;

  GstreamerDotDetails (const std::string &value) {
    enumValue = getValueFromString (value);
  };

  GstreamerDotDetails (type value) {
    this->enumValue = value;
  }

  type getValue () {
    return enumValue;
  };

  std::string getString () {

    if (enumValue ==  SHOW_MEDIA_TYPE) {
      return "SHOW_MEDIA_TYPE";
    }

    if (enumValue ==  SHOW_CAPS_DETAILS) {
      return "SHOW_CAPS_DETAILS";
    }

    if (enumValue ==  SHOW_NON_DEFAULT_PARAMS) {
      return "SHOW_NON_DEFAULT_PARAMS";
    }

    if (enumValue ==  SHOW_STATES) {
      return "SHOW_STATES";
    }

    if (enumValue ==  SHOW_FULL_PARAMS) {
      return "SHOW_FULL_PARAMS";
    }

    if (enumValue ==  SHOW_ALL) {
      return "SHOW_ALL";
    }

    if (enumValue ==  SHOW_VERBOSE) {
      return "SHOW_VERBOSE";
    }

    return "";
  }

  void Serialize (JsonSerializer &s);

  GstreamerDotDetails() = default;

private:

  static type getValueFromString (const std::string &value);

  type enumValue;

  friend void kurento::Serialize (std::shared_ptr<kurento::GstreamerDotDetails> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __GSTREAMER_DOT_DETAILS_HPP__ */
