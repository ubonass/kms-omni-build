/* Autogenerated with kurento-module-creator */

#ifndef __VIDEO_CAPS_HPP__
#define __VIDEO_CAPS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class VideoCodec;
class Fraction;
} /* kurento */

namespace kurento
{
class VideoCaps;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::VideoCaps> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{
class VideoCodec;

class Fraction;

class VideoCaps : public RegisterParent 
{

public:

  VideoCaps (std::shared_ptr<VideoCodec> codec, std::shared_ptr<Fraction> framerate) {
    this->codec = codec;
    this->framerate = framerate;
  };

  void setCodec (std::shared_ptr<VideoCodec> codec) {
    this->codec = codec;
  };

  std::shared_ptr<VideoCodec> getCodec () {
    return codec;
  };

  void setFramerate (std::shared_ptr<Fraction> framerate) {
    this->framerate = framerate;
  };

  std::shared_ptr<Fraction> getFramerate () {
    return framerate;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new VideoCaps ();

    };

    RegisterParent::registerType ("kurento.VideoCaps", func);
  }

protected:

  VideoCaps() = default;

private:

  std::shared_ptr<VideoCodec> codec;
  std::shared_ptr<Fraction> framerate;

  friend void kurento::Serialize (std::shared_ptr<kurento::VideoCaps> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __VIDEO_CAPS_HPP__ */
