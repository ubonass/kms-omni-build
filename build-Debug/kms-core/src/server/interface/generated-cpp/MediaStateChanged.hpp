/* Autogenerated with kurento-module-creator */

#ifndef __MEDIA_STATE_CHANGED_HPP__
#define __MEDIA_STATE_CHANGED_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class MediaStateChanged;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::MediaStateChanged> &object, JsonSerializer &s);
}


namespace kurento
{
class MediaState;
} /* kurento */

namespace kurento
{
class MediaState;
class MediaState;

class MediaStateChanged : public Media
{

public:

  MediaStateChanged (std::shared_ptr<MediaObject> source, const std::string &type, std::shared_ptr<MediaState> oldState, std::shared_ptr<MediaState> newState) : Media (source, type) {
      this->oldState = oldState;
      this->newState = newState;
  };

  MediaStateChanged (const MediaStateChanged &copy) : Media (copy) {
      this->oldState = copy.oldState;
      this->newState = copy.newState;
  };

  MediaStateChanged (const Json::Value &value);

  virtual void setOldState (std::shared_ptr<MediaState> oldState) {
    this->oldState = oldState;
  };

  virtual std::shared_ptr<MediaState> getOldState () {
    return oldState;
  };

  virtual void setNewState (std::shared_ptr<MediaState> newState) {
    this->newState = newState;
  };

  virtual std::shared_ptr<MediaState> getNewState () {
    return newState;
  };

  static std::string getName() {
    return "MediaStateChanged";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  MediaStateChanged() = default;

private:
  std::shared_ptr<MediaState> oldState;
  std::shared_ptr<MediaState> newState;

  friend void kurento::Serialize (std::shared_ptr<kurento::MediaStateChanged> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __MEDIA_STATE_CHANGED_HPP__ */
