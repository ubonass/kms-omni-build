/* Autogenerated with kurento-module-creator */

#include "RTCPeerConnectionStats.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>

namespace kurento
{

void RTCPeerConnectionStats::Serialize (JsonSerializer &s)
{
  RTCStats::Serialize (s);


  if (s.IsWriter) {
    s.JsonValue["__type__"] = "RTCPeerConnectionStats";
    s.JsonValue["__module__"] = "kurento";

    s.SerializeNVP (dataChannelsOpened);

    s.SerializeNVP (dataChannelsClosed);

  } else {
    if (!s.JsonValue.isMember ("dataChannelsOpened") || !s.JsonValue["dataChannelsOpened"].isConvertibleTo (Json::ValueType::int64Value) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'dataChannelsOpened' property should be a int64");
    }

    s.SerializeNVP (dataChannelsOpened);

    if (!s.JsonValue.isMember ("dataChannelsClosed") || !s.JsonValue["dataChannelsClosed"].isConvertibleTo (Json::ValueType::int64Value) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'dataChannelsClosed' property should be a int64");
    }

    s.SerializeNVP (dataChannelsClosed);

  }
}

} /* kurento */

namespace kurento
{

void
Serialize (std::shared_ptr<kurento::RTCPeerConnectionStats> &object, JsonSerializer &s)
{
  if (!s.IsWriter && !object) {
    if (!s.JsonValue.isMember ("__type__") || !s.JsonValue["__type__"].isConvertibleTo (Json::ValueType::stringValue) || !s.JsonValue.isMember ("__module__") || !s.JsonValue["__module__"].isConvertibleTo (Json::ValueType::stringValue)) {
      object.reset (new kurento::RTCPeerConnectionStats() );
    } else {
      auto ptr = kurento::RegisterParent::createRegister (s.JsonValue["__module__"].asString () + "." + s.JsonValue["__type__"].asString ());

      if (!ptr) {
        throw KurentoException (UNEXPECTED_ERROR,
                                "Type " + s.JsonValue["__type__"].asString () + " does not exist in module " + s.JsonValue["__module__"].asString ());
      }

      object.reset (dynamic_cast <kurento::RTCPeerConnectionStats*> (ptr));

      if (!object) {
        delete ptr;
        throw KurentoException (UNEXPECTED_ERROR, "Type " + s.JsonValue["__type__"].asString () + " is not compatible");
      }
    }
  }

  if (object) {
    object->Serialize (s);
  }
}

} /* kurento */