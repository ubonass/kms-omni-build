/* Autogenerated with kurento-module-creator */

#ifndef __RAISE_BASE_HPP__
#define __RAISE_BASE_HPP__

#include <json/json.h>
#include <memory>

namespace kurento
{
class RaiseBase;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::RaiseBase> &object, JsonSerializer &s);
}


namespace kurento
{
class MediaObject;
class Tag;
} /* kurento */

namespace kurento
{
class MediaObject;
class Tag;

class RaiseBase
{

public:

  RaiseBase (std::shared_ptr<MediaObject> source);

  RaiseBase (const RaiseBase &copy) {
      this->source = copy.source;
      this->timestamp = copy.timestamp;
      this->timestampMillis = copy.timestampMillis;
      this->tags = copy.tags;
  };

  RaiseBase (const Json::Value &value);

  virtual void setSource (std::shared_ptr<MediaObject> source) {
    this->source = source;
  };

  virtual std::shared_ptr<MediaObject> getSource () {
    return source;
  };

  virtual void setTimestamp (const std::string &timestamp) {
    this->timestamp = timestamp;
  };

  virtual const std::string &getTimestamp () {
    return timestamp;
  };

  virtual void setTimestampMillis (const std::string &timestampMillis) {
    this->timestampMillis = timestampMillis;
  };

  virtual const std::string &getTimestampMillis () {
    return timestampMillis;
  };

  virtual void setTags (const std::vector<std::shared_ptr<Tag>> &tags) {
    this->tags = tags;
  };

  virtual const std::vector<std::shared_ptr<Tag>> &getTags () {
    return tags;
  };

  static std::string getName() {
    return "RaiseBase";
  }

  virtual void Serialize (JsonSerializer &s);

protected:

  RaiseBase() = default;

private:
  std::shared_ptr<MediaObject> source;
  std::string timestamp;
  std::string timestampMillis;
  std::vector<std::shared_ptr<Tag>> tags;

  friend void kurento::Serialize (std::shared_ptr<kurento::RaiseBase> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __RAISE_BASE_HPP__ */
