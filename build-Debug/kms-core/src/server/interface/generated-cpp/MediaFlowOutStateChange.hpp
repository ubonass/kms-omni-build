/* Autogenerated with kurento-module-creator */

#ifndef __MEDIA_FLOW_OUT_STATE_CHANGE_HPP__
#define __MEDIA_FLOW_OUT_STATE_CHANGE_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class MediaFlowOutStateChange;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::MediaFlowOutStateChange> &object, JsonSerializer &s);
}


namespace kurento
{
class MediaFlowState;
class MediaType;
} /* kurento */

namespace kurento
{
class MediaFlowState;
class MediaType;

class MediaFlowOutStateChange : public Media
{

public:

  MediaFlowOutStateChange (std::shared_ptr<MediaObject> source, const std::string &type, std::shared_ptr<MediaFlowState> state, const std::string &padName, std::shared_ptr<MediaType> mediaType) : Media (source, type) {
      this->state = state;
      this->padName = padName;
      this->mediaType = mediaType;
  };

  MediaFlowOutStateChange (const MediaFlowOutStateChange &copy) : Media (copy) {
      this->state = copy.state;
      this->padName = copy.padName;
      this->mediaType = copy.mediaType;
  };

  MediaFlowOutStateChange (const Json::Value &value);

  virtual void setState (std::shared_ptr<MediaFlowState> state) {
    this->state = state;
  };

  virtual std::shared_ptr<MediaFlowState> getState () {
    return state;
  };

  virtual void setPadName (const std::string &padName) {
    this->padName = padName;
  };

  virtual const std::string &getPadName () {
    return padName;
  };

  virtual void setMediaType (std::shared_ptr<MediaType> mediaType) {
    this->mediaType = mediaType;
  };

  virtual std::shared_ptr<MediaType> getMediaType () {
    return mediaType;
  };

  static std::string getName() {
    return "MediaFlowOutStateChange";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  MediaFlowOutStateChange() = default;

private:
  std::shared_ptr<MediaFlowState> state;
  std::string padName;
  std::shared_ptr<MediaType> mediaType;

  friend void kurento::Serialize (std::shared_ptr<kurento::MediaFlowOutStateChange> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __MEDIA_FLOW_OUT_STATE_CHANGE_HPP__ */
