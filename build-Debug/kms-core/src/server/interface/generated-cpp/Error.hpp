/* Autogenerated with kurento-module-creator */

#ifndef __ERROR_HPP__
#define __ERROR_HPP__

#include <json/json.h>
#include <memory>
#include "RaiseBase.hpp"

namespace kurento
{
class Error;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::Error> &object, JsonSerializer &s);
}


namespace kurento
{

class Error : public RaiseBase
{

public:

  Error (std::shared_ptr<MediaObject> source, const std::string &description, int errorCode, const std::string &type) : RaiseBase (source) {
      this->description = description;
      this->errorCode = errorCode;
      this->type = type;
  };

  Error (const Error &copy) : RaiseBase (copy) {
      this->description = copy.description;
      this->errorCode = copy.errorCode;
      this->type = copy.type;
  };

  Error (const Json::Value &value);

  virtual void setDescription (const std::string &description) {
    this->description = description;
  };

  virtual const std::string &getDescription () {
    return description;
  };

  virtual void setErrorCode (int errorCode) {
    this->errorCode = errorCode;
  };

  virtual int getErrorCode () {
    return errorCode;
  };

  virtual void setType (const std::string &type) {
    this->type = type;
  };

  virtual const std::string &getType () {
    return type;
  };

  static std::string getName() {
    return "Error";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  Error() = default;

private:
  std::string description;
  int errorCode;
  std::string type;

  friend void kurento::Serialize (std::shared_ptr<kurento::Error> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __ERROR_HPP__ */
