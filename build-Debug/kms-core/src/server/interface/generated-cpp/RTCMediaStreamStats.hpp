/* Autogenerated with kurento-module-creator */

#ifndef __RTCMEDIA_STREAM_STATS_HPP__
#define __RTCMEDIA_STREAM_STATS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include "RTCStats.hpp"


namespace kurento
{
class RTCMediaStreamStats;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::RTCMediaStreamStats> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class RTCMediaStreamStats : public RTCStats
{

public:

  RTCMediaStreamStats (const std::string &id, std::shared_ptr<StatsType> type, double timestamp, int64_t timestampMillis, const std::string &streamIdentifier, const std::vector<std::string> &trackIds) : RTCStats (id, type, timestamp, timestampMillis) {
    this->streamIdentifier = streamIdentifier;
    this->trackIds = trackIds;
  };

  void setStreamIdentifier (const std::string &streamIdentifier) {
    this->streamIdentifier = streamIdentifier;
  };

  std::string getStreamIdentifier () {
    return streamIdentifier;
  };

  void setTrackIds (const std::vector<std::string> &trackIds) {
    this->trackIds = trackIds;
  };

  std::vector<std::string> getTrackIds () {
    return trackIds;
  };

  void Serialize (JsonSerializer &s) override;

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new RTCMediaStreamStats ();

    };

    RegisterParent::registerType ("kurento.RTCMediaStreamStats", func);
  }

protected:

  RTCMediaStreamStats() = default;

private:

  std::string streamIdentifier;
  std::vector<std::string> trackIds;

  friend void kurento::Serialize (std::shared_ptr<kurento::RTCMediaStreamStats> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __RTCMEDIA_STREAM_STATS_HPP__ */
