/* Autogenerated with kurento-module-creator */

#ifndef __SERVER_INFO_HPP__
#define __SERVER_INFO_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class ModuleInfo;
class ServerType;
} /* kurento */

namespace kurento
{
class ServerInfo;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::ServerInfo> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{
class ModuleInfo;

class ServerType;


class ServerInfo : public RegisterParent 
{

public:

  ServerInfo (const std::string &version, const std::vector<std::shared_ptr<ModuleInfo>> &modules, std::shared_ptr<ServerType> type, const std::vector<std::string> &capabilities) {
    this->version = version;
    this->modules = modules;
    this->type = type;
    this->capabilities = capabilities;
  };

  void setVersion (const std::string &version) {
    this->version = version;
  };

  std::string getVersion () {
    return version;
  };

  void setModules (const std::vector<std::shared_ptr<ModuleInfo>> &modules) {
    this->modules = modules;
  };

  std::vector<std::shared_ptr<ModuleInfo>> getModules () {
    return modules;
  };

  void setType (std::shared_ptr<ServerType> type) {
    this->type = type;
  };

  std::shared_ptr<ServerType> getType () {
    return type;
  };

  void setCapabilities (const std::vector<std::string> &capabilities) {
    this->capabilities = capabilities;
  };

  std::vector<std::string> getCapabilities () {
    return capabilities;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new ServerInfo ();

    };

    RegisterParent::registerType ("kurento.ServerInfo", func);
  }

protected:

  ServerInfo() = default;

private:

  std::string version;
  std::vector<std::shared_ptr<ModuleInfo>> modules;
  std::shared_ptr<ServerType> type;
  std::vector<std::string> capabilities;

  friend void kurento::Serialize (std::shared_ptr<kurento::ServerInfo> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __SERVER_INFO_HPP__ */
