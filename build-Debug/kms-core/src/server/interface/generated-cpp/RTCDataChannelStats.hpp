/* Autogenerated with kurento-module-creator */

#ifndef __RTCDATA_CHANNEL_STATS_HPP__
#define __RTCDATA_CHANNEL_STATS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include "RTCStats.hpp"


namespace kurento
{
class RTCDataChannelState;
} /* kurento */

namespace kurento
{
class RTCDataChannelStats;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::RTCDataChannelStats> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{
class RTCDataChannelState;





class RTCDataChannelStats : public RTCStats
{

public:

  RTCDataChannelStats (const std::string &id, std::shared_ptr<StatsType> type, double timestamp, int64_t timestampMillis, const std::string &label, const std::string &protocol, int64_t datachannelid, std::shared_ptr<RTCDataChannelState> state, int64_t messagesSent, int64_t bytesSent, int64_t messagesReceived, int64_t bytesReceived) : RTCStats (id, type, timestamp, timestampMillis) {
    this->label = label;
    this->protocol = protocol;
    this->datachannelid = datachannelid;
    this->state = state;
    this->messagesSent = messagesSent;
    this->bytesSent = bytesSent;
    this->messagesReceived = messagesReceived;
    this->bytesReceived = bytesReceived;
  };

  void setLabel (const std::string &label) {
    this->label = label;
  };

  std::string getLabel () {
    return label;
  };

  void setProtocol (const std::string &protocol) {
    this->protocol = protocol;
  };

  std::string getProtocol () {
    return protocol;
  };

  void setDatachannelid (int64_t datachannelid) {
    this->datachannelid = datachannelid;
  };

  int64_t getDatachannelid () {
    return datachannelid;
  };

  void setState (std::shared_ptr<RTCDataChannelState> state) {
    this->state = state;
  };

  std::shared_ptr<RTCDataChannelState> getState () {
    return state;
  };

  void setMessagesSent (int64_t messagesSent) {
    this->messagesSent = messagesSent;
  };

  int64_t getMessagesSent () {
    return messagesSent;
  };

  void setBytesSent (int64_t bytesSent) {
    this->bytesSent = bytesSent;
  };

  int64_t getBytesSent () {
    return bytesSent;
  };

  void setMessagesReceived (int64_t messagesReceived) {
    this->messagesReceived = messagesReceived;
  };

  int64_t getMessagesReceived () {
    return messagesReceived;
  };

  void setBytesReceived (int64_t bytesReceived) {
    this->bytesReceived = bytesReceived;
  };

  int64_t getBytesReceived () {
    return bytesReceived;
  };

  void Serialize (JsonSerializer &s) override;

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new RTCDataChannelStats ();

    };

    RegisterParent::registerType ("kurento.RTCDataChannelStats", func);
  }

protected:

  RTCDataChannelStats() = default;

private:

  std::string label;
  std::string protocol;
  int64_t datachannelid;
  std::shared_ptr<RTCDataChannelState> state;
  int64_t messagesSent;
  int64_t bytesSent;
  int64_t messagesReceived;
  int64_t bytesReceived;

  friend void kurento::Serialize (std::shared_ptr<kurento::RTCDataChannelStats> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __RTCDATA_CHANNEL_STATS_HPP__ */
