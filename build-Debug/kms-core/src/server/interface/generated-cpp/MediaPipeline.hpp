/* Autogenerated with kurento-module-creator */

#ifndef __MEDIA_PIPELINE_HPP__
#define __MEDIA_PIPELINE_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "MediaObject.hpp"

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::MediaPipeline> &object, JsonSerializer &serializer);
}

namespace kurento
{
class GstreamerDotDetails;
} /* kurento */

namespace kurento
{
class MediaPipeline : public virtual MediaObject
{

public:
  MediaPipeline() = default;
  ~MediaPipeline() override = default;


  virtual std::string getGstreamerDot () = 0;
  virtual std::string getGstreamerDot (std::shared_ptr<GstreamerDotDetails> details) = 0;

  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

  virtual bool getLatencyStats () = 0;
  virtual void setLatencyStats (bool latencyStats) = 0;

};

} /* kurento */

#endif /*  __MEDIA_PIPELINE_HPP__ */
