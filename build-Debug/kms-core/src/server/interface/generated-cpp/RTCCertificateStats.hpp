/* Autogenerated with kurento-module-creator */

#ifndef __RTCCERTIFICATE_STATS_HPP__
#define __RTCCERTIFICATE_STATS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include "RTCStats.hpp"


namespace kurento
{
class RTCCertificateStats;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::RTCCertificateStats> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class RTCCertificateStats : public RTCStats
{

public:

  RTCCertificateStats (const std::string &id, std::shared_ptr<StatsType> type, double timestamp, int64_t timestampMillis, const std::string &fingerprint, const std::string &fingerprintAlgorithm, const std::string &base64Certificate, const std::string &issuerCertificateId) : RTCStats (id, type, timestamp, timestampMillis) {
    this->fingerprint = fingerprint;
    this->fingerprintAlgorithm = fingerprintAlgorithm;
    this->base64Certificate = base64Certificate;
    this->issuerCertificateId = issuerCertificateId;
  };

  void setFingerprint (const std::string &fingerprint) {
    this->fingerprint = fingerprint;
  };

  std::string getFingerprint () {
    return fingerprint;
  };

  void setFingerprintAlgorithm (const std::string &fingerprintAlgorithm) {
    this->fingerprintAlgorithm = fingerprintAlgorithm;
  };

  std::string getFingerprintAlgorithm () {
    return fingerprintAlgorithm;
  };

  void setBase64Certificate (const std::string &base64Certificate) {
    this->base64Certificate = base64Certificate;
  };

  std::string getBase64Certificate () {
    return base64Certificate;
  };

  void setIssuerCertificateId (const std::string &issuerCertificateId) {
    this->issuerCertificateId = issuerCertificateId;
  };

  std::string getIssuerCertificateId () {
    return issuerCertificateId;
  };

  void Serialize (JsonSerializer &s) override;

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new RTCCertificateStats ();

    };

    RegisterParent::registerType ("kurento.RTCCertificateStats", func);
  }

protected:

  RTCCertificateStats() = default;

private:

  std::string fingerprint;
  std::string fingerprintAlgorithm;
  std::string base64Certificate;
  std::string issuerCertificateId;

  friend void kurento::Serialize (std::shared_ptr<kurento::RTCCertificateStats> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __RTCCERTIFICATE_STATS_HPP__ */
