/* Autogenerated with kurento-module-creator */

#include "AudioCodec.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>

namespace kurento
{

AudioCodec::type AudioCodec::getValueFromString (const std::string &value)
{

  if (value ==  "OPUS") {
    return OPUS;
  }

  if (value ==  "PCMU") {
    return PCMU;
  }

  if (value ==  "RAW") {
    return RAW;
  }

  throw KurentoException (MARSHALL_ERROR,
                          "Invalid value for 'AudioCodec'");

}

void AudioCodec::Serialize (JsonSerializer &s)
{
  if (s.IsWriter) {
    s.JsonValue = getString();
  } else {
    if (s.JsonValue.isConvertibleTo (Json::ValueType::stringValue) ) {
      enumValue = getValueFromString (s.JsonValue.asString() );
    } else {
      throw KurentoException (MARSHALL_ERROR,
                              "'AudioCodec' type should be a string");
    }
  }
}

} /* kurento */

namespace kurento
{

void
Serialize (std::shared_ptr<kurento::AudioCodec> &object, JsonSerializer &s)
{
  if (!s.IsWriter && !object) {
    object.reset (new kurento::AudioCodec() );
  }

  if (object) {
    object->Serialize (s);
  }
}

} /* kurento */