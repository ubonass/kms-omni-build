/* Autogenerated with kurento-module-creator */

#include "StatsType.hpp"
#include "Stats.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>

namespace kurento
{

void Stats::Serialize (JsonSerializer &s)
{

  if (s.IsWriter) {
    s.JsonValue["__type__"] = "Stats";
    s.JsonValue["__module__"] = "kurento";

    s.SerializeNVP (id);

    s.SerializeNVP (type);

    s.SerializeNVP (timestamp);

    s.SerializeNVP (timestampMillis);

  } else {
    if (!s.JsonValue.isMember ("id") || !s.JsonValue["id"].isConvertibleTo (Json::ValueType::stringValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'id' property should be a string");
    }

    s.SerializeNVP (id);

    if (!s.JsonValue.isMember ("type") || !s.JsonValue["type"].isConvertibleTo (Json::ValueType::stringValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'type' property should be a string");
    }

    s.SerializeNVP (type);

    if (!s.JsonValue.isMember ("timestamp") || !s.JsonValue["timestamp"].isConvertibleTo (Json::ValueType::realValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'timestamp' property should be a double");
    }

    s.SerializeNVP (timestamp);

    if (!s.JsonValue.isMember ("timestampMillis") || !s.JsonValue["timestampMillis"].isConvertibleTo (Json::ValueType::int64Value) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'timestampMillis' property should be a int64");
    }

    s.SerializeNVP (timestampMillis);

  }
}

} /* kurento */

namespace kurento
{

void
Serialize (std::shared_ptr<kurento::Stats> &object, JsonSerializer &s)
{
  if (!s.IsWriter && !object) {
    if (!s.JsonValue.isMember ("__type__") || !s.JsonValue["__type__"].isConvertibleTo (Json::ValueType::stringValue) || !s.JsonValue.isMember ("__module__") || !s.JsonValue["__module__"].isConvertibleTo (Json::ValueType::stringValue)) {
      object.reset (new kurento::Stats() );
    } else {
      auto ptr = kurento::RegisterParent::createRegister (s.JsonValue["__module__"].asString () + "." + s.JsonValue["__type__"].asString ());

      if (!ptr) {
        throw KurentoException (UNEXPECTED_ERROR,
                                "Type " + s.JsonValue["__type__"].asString () + " does not exist in module " + s.JsonValue["__module__"].asString ());
      }

      object.reset (dynamic_cast <kurento::Stats*> (ptr));

      if (!object) {
        delete ptr;
        throw KurentoException (UNEXPECTED_ERROR, "Type " + s.JsonValue["__type__"].asString () + " is not compatible");
      }
    }
  }

  if (object) {
    object->Serialize (s);
  }
}

} /* kurento */