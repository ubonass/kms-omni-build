/* Autogenerated with kurento-module-creator */

#ifndef __MEDIA_TRANSCODING_STATE_CHANGE_HPP__
#define __MEDIA_TRANSCODING_STATE_CHANGE_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class MediaTranscodingStateChange;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::MediaTranscodingStateChange> &object, JsonSerializer &s);
}


namespace kurento
{
class MediaTranscodingState;
class MediaType;
} /* kurento */

namespace kurento
{
class MediaTranscodingState;
class MediaType;

class MediaTranscodingStateChange : public Media
{

public:

  MediaTranscodingStateChange (std::shared_ptr<MediaObject> source, const std::string &type, std::shared_ptr<MediaTranscodingState> state, const std::string &binName, std::shared_ptr<MediaType> mediaType) : Media (source, type) {
      this->state = state;
      this->binName = binName;
      this->mediaType = mediaType;
  };

  MediaTranscodingStateChange (const MediaTranscodingStateChange &copy) : Media (copy) {
      this->state = copy.state;
      this->binName = copy.binName;
      this->mediaType = copy.mediaType;
  };

  MediaTranscodingStateChange (const Json::Value &value);

  virtual void setState (std::shared_ptr<MediaTranscodingState> state) {
    this->state = state;
  };

  virtual std::shared_ptr<MediaTranscodingState> getState () {
    return state;
  };

  virtual void setBinName (const std::string &binName) {
    this->binName = binName;
  };

  virtual const std::string &getBinName () {
    return binName;
  };

  virtual void setMediaType (std::shared_ptr<MediaType> mediaType) {
    this->mediaType = mediaType;
  };

  virtual std::shared_ptr<MediaType> getMediaType () {
    return mediaType;
  };

  static std::string getName() {
    return "MediaTranscodingStateChange";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  MediaTranscodingStateChange() = default;

private:
  std::shared_ptr<MediaTranscodingState> state;
  std::string binName;
  std::shared_ptr<MediaType> mediaType;

  friend void kurento::Serialize (std::shared_ptr<kurento::MediaTranscodingStateChange> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __MEDIA_TRANSCODING_STATE_CHANGE_HPP__ */
