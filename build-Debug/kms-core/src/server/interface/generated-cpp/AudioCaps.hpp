/* Autogenerated with kurento-module-creator */

#ifndef __AUDIO_CAPS_HPP__
#define __AUDIO_CAPS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class AudioCodec;
} /* kurento */

namespace kurento
{
class AudioCaps;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::AudioCaps> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{
class AudioCodec;


class AudioCaps : public RegisterParent 
{

public:

  AudioCaps (std::shared_ptr<AudioCodec> codec, int bitrate) {
    this->codec = codec;
    this->bitrate = bitrate;
  };

  void setCodec (std::shared_ptr<AudioCodec> codec) {
    this->codec = codec;
  };

  std::shared_ptr<AudioCodec> getCodec () {
    return codec;
  };

  void setBitrate (int bitrate) {
    this->bitrate = bitrate;
  };

  int getBitrate () {
    return bitrate;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new AudioCaps ();

    };

    RegisterParent::registerType ("kurento.AudioCaps", func);
  }

protected:

  AudioCaps() = default;

private:

  std::shared_ptr<AudioCodec> codec;
  int bitrate;

  friend void kurento::Serialize (std::shared_ptr<kurento::AudioCaps> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __AUDIO_CAPS_HPP__ */
