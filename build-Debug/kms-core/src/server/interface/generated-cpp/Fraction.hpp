/* Autogenerated with kurento-module-creator */

#ifndef __FRACTION_HPP__
#define __FRACTION_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class Fraction;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::Fraction> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class Fraction : public RegisterParent 
{

public:

  Fraction (int numerator, int denominator) {
    this->numerator = numerator;
    this->denominator = denominator;
  };

  void setNumerator (int numerator) {
    this->numerator = numerator;
  };

  int getNumerator () {
    return numerator;
  };

  void setDenominator (int denominator) {
    this->denominator = denominator;
  };

  int getDenominator () {
    return denominator;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new Fraction ();

    };

    RegisterParent::registerType ("kurento.Fraction", func);
  }

protected:

  Fraction() = default;

private:

  int numerator;
  int denominator;

  friend void kurento::Serialize (std::shared_ptr<kurento::Fraction> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __FRACTION_HPP__ */
