/* Autogenerated with kurento-module-creator */

#ifndef __SERVER_MANAGER_HPP__
#define __SERVER_MANAGER_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "MediaObject.hpp"
#include "ObjectCreated.hpp"
#include "ObjectDestroyed.hpp"
#include <sigc++/sigc++.h>

namespace kurento
{
class ServerManager;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::ServerManager> &object, JsonSerializer &serializer);
}

namespace kurento
{
class ServerInfo;
class MediaPipeline;
} /* kurento */

namespace kurento
{
class ServerManager : public virtual MediaObject
{

public:
  ServerManager() = default;
  ~ServerManager() override = default;


  virtual std::string getKmd (const std::string &moduleName) = 0;
  virtual int64_t getUsedMemory () = 0;

  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

  virtual std::shared_ptr<ServerInfo> getInfo () = 0;

  virtual std::vector<std::shared_ptr<MediaPipeline>> getPipelines () = 0;

  virtual std::vector<std::string> getSessions () = 0;

  virtual std::string getMetadata () = 0;

};

} /* kurento */

#endif /*  __SERVER_MANAGER_HPP__ */
