/* Autogenerated with kurento-module-creator */

#include "FactoryRegistrar.hpp"

#include <ZBarFilterImplFactory.hpp>
#include <ZBarFilter.hpp>
#include <OpenCVFilterImplFactory.hpp>
#include <OpenCVFilter.hpp>
#include <ImageOverlayFilterImplFactory.hpp>
#include <ImageOverlayFilter.hpp>
#include <GStreamerFilterImplFactory.hpp>
#include <GStreamerFilter.hpp>
#include <FaceOverlayFilterImplFactory.hpp>
#include <FaceOverlayFilter.hpp>

extern "C" {

  const kurento::FactoryRegistrar *getFactoryRegistrar ();

}

const kurento::FactoryRegistrar *
getFactoryRegistrar ()
{
  static bool loaded = false;
  static std::map<std::string, std::shared_ptr<kurento::Factory>> factories;

  if (!loaded) {
    factories["ZBarFilter"] = std::shared_ptr <kurento::Factory> (new kurento::ZBarFilterImplFactory() );
    factories["ImageOverlayFilter"] = std::shared_ptr <kurento::Factory> (new kurento::ImageOverlayFilterImplFactory() );
    factories["GStreamerFilter"] = std::shared_ptr <kurento::Factory> (new kurento::GStreamerFilterImplFactory() );
    factories["FaceOverlayFilter"] = std::shared_ptr <kurento::Factory> (new kurento::FaceOverlayFilterImplFactory() );

    loaded = true;
  }

  static kurento::FactoryRegistrar factory (factories);
  return &factory;
}
