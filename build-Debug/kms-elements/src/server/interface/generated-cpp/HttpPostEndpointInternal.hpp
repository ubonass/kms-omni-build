/* Autogenerated with kurento-module-creator */

#ifndef __HTTP_POST_ENDPOINT_INTERNAL_HPP__
#define __HTTP_POST_ENDPOINT_INTERNAL_HPP__

#include "HttpPostEndpoint.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{

class HttpPostEndpointConstructor
{
public:
  HttpPostEndpointConstructor() = default;
  ~HttpPostEndpointConstructor() = default;

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  int getDisconnectionTimeout ();

  void setDisconnectionTimeout (int disconnectionTimeout) {
    this->disconnectionTimeout = disconnectionTimeout;
    __isSetDisconnectionTimeout = true;
    __isSetDefaultDisconnectionTimeout = false;
  }

  bool getUseEncodedMedia ();

  void setUseEncodedMedia (bool useEncodedMedia) {
    this->useEncodedMedia = useEncodedMedia;
    __isSetUseEncodedMedia = true;
    __isSetDefaultUseEncodedMedia = false;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  int disconnectionTimeout;
  bool __isSetDisconnectionTimeout = false;
  bool __isSetDefaultDisconnectionTimeout = false;
  bool useEncodedMedia;
  bool __isSetUseEncodedMedia = false;
  bool __isSetDefaultUseEncodedMedia = false;
};

} /* kurento */

#endif /*  __HTTP_POST_ENDPOINT_INTERNAL_HPP__ */
