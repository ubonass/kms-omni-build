/* Autogenerated with kurento-module-creator */

#ifndef __RTP_ENDPOINT_INTERNAL_HPP__
#define __RTP_ENDPOINT_INTERNAL_HPP__

#include "RtpEndpoint.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
class SDES;
} /* kurento */

namespace kurento
{

class RtpEndpointConstructor
{
public:
  RtpEndpointConstructor() = default;
  ~RtpEndpointConstructor() = default;

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  std::shared_ptr<SDES> getCrypto ();

  void setCrypto (std::shared_ptr<SDES> crypto) {
    this->crypto = crypto;
    __isSetCrypto = true;
    __isSetDefaultCrypto = false;
  }

  bool getUseIpv6 ();

  void setUseIpv6 (bool useIpv6) {
    this->useIpv6 = useIpv6;
    __isSetUseIpv6 = true;
    __isSetDefaultUseIpv6 = false;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  std::shared_ptr<SDES> crypto;
  bool __isSetCrypto = false;
  bool __isSetDefaultCrypto = false;
  bool useIpv6;
  bool __isSetUseIpv6 = false;
  bool __isSetDefaultUseIpv6 = false;
};

} /* kurento */

#endif /*  __RTP_ENDPOINT_INTERNAL_HPP__ */
