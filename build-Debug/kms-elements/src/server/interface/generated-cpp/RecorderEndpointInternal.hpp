/* Autogenerated with kurento-module-creator */

#ifndef __RECORDER_ENDPOINT_INTERNAL_HPP__
#define __RECORDER_ENDPOINT_INTERNAL_HPP__

#include "RecorderEndpoint.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
class MediaProfileSpecType;
} /* kurento */

namespace kurento
{

class RecorderEndpointMethodRecord
{
public:
  RecorderEndpointMethodRecord() = default;
  ~RecorderEndpointMethodRecord() = default;

  void invoke (std::shared_ptr<RecorderEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

};

class RecorderEndpointMethodStopAndWait
{
public:
  RecorderEndpointMethodStopAndWait() = default;
  ~RecorderEndpointMethodStopAndWait() = default;

  void invoke (std::shared_ptr<RecorderEndpoint> obj);
  void Serialize (JsonSerializer &serializer);

};

class RecorderEndpointConstructor
{
public:
  RecorderEndpointConstructor() = default;
  ~RecorderEndpointConstructor() = default;

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  std::string getUri ();

  void setUri (const std::string &uri) {
    this->uri = uri;
  }

  std::shared_ptr<MediaProfileSpecType> getMediaProfile ();

  void setMediaProfile (std::shared_ptr<MediaProfileSpecType> mediaProfile) {
    this->mediaProfile = mediaProfile;
    __isSetMediaProfile = true;
    __isSetDefaultMediaProfile = false;
  }

  bool getStopOnEndOfStream ();

  void setStopOnEndOfStream (bool stopOnEndOfStream) {
    this->stopOnEndOfStream = stopOnEndOfStream;
    __isSetStopOnEndOfStream = true;
    __isSetDefaultStopOnEndOfStream = false;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  std::string uri;
  std::shared_ptr<MediaProfileSpecType> mediaProfile;
  bool __isSetMediaProfile = false;
  bool __isSetDefaultMediaProfile = false;
  bool stopOnEndOfStream;
  bool __isSetStopOnEndOfStream = false;
  bool __isSetDefaultStopOnEndOfStream = false;
};

} /* kurento */

#endif /*  __RECORDER_ENDPOINT_INTERNAL_HPP__ */
