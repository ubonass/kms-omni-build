/* Autogenerated with kurento-module-creator */

#ifndef __MIXER_HPP__
#define __MIXER_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "Hub.hpp"

namespace kurento
{
class Mixer;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::Mixer> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
class MediaType;
class HubPort;
} /* kurento */

namespace kurento
{
class Mixer : public virtual Hub
{

public:
  Mixer() = default;
  ~Mixer() override = default;


  virtual void connect (std::shared_ptr<MediaType> media, std::shared_ptr<HubPort> source, std::shared_ptr<HubPort> sink) = 0;
  virtual void disconnect (std::shared_ptr<MediaType> media, std::shared_ptr<HubPort> source, std::shared_ptr<HubPort> sink) = 0;

  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

};

} /* kurento */

#endif /*  __MIXER_HPP__ */
