/* Autogenerated with kurento-module-creator */

#ifndef __DISPATCHER_INTERNAL_HPP__
#define __DISPATCHER_INTERNAL_HPP__

#include "Dispatcher.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
class HubPort;
} /* kurento */

namespace kurento
{

class DispatcherMethodConnect
{
public:
  DispatcherMethodConnect() = default;
  ~DispatcherMethodConnect() = default;

  void invoke (std::shared_ptr<Dispatcher> obj);
  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<HubPort> getSource () {
    return source;
  }

  void setSource (std::shared_ptr<HubPort> source) {
    this->source = source;
  }

  std::shared_ptr<HubPort> getSink () {
    return sink;
  }

  void setSink (std::shared_ptr<HubPort> sink) {
    this->sink = sink;
  }

private:
  std::shared_ptr<HubPort> source;
  std::shared_ptr<HubPort> sink;
};

class DispatcherConstructor
{
public:
  DispatcherConstructor() = default;
  ~DispatcherConstructor() = default;

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
};

} /* kurento */

#endif /*  __DISPATCHER_INTERNAL_HPP__ */
