/* Autogenerated with kurento-module-creator */

#ifndef __ICE_CANDIDATE_HPP__
#define __ICE_CANDIDATE_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class IceCandidate;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::IceCandidate> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class IceCandidate : public RegisterParent 
{

public:

  IceCandidate (const std::string &candidate, const std::string &sdpMid, int sdpMLineIndex) {
    this->candidate = candidate;
    this->sdpMid = sdpMid;
    this->sdpMLineIndex = sdpMLineIndex;
  };

  void setCandidate (const std::string &candidate) {
    this->candidate = candidate;
  };

  std::string getCandidate () {
    return candidate;
  };

  void setSdpMid (const std::string &sdpMid) {
    this->sdpMid = sdpMid;
  };

  std::string getSdpMid () {
    return sdpMid;
  };

  void setSdpMLineIndex (int sdpMLineIndex) {
    this->sdpMLineIndex = sdpMLineIndex;
  };

  int getSdpMLineIndex () {
    return sdpMLineIndex;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new IceCandidate ();

    };

    RegisterParent::registerType ("kurento.IceCandidate", func);
  }

protected:

  IceCandidate() = default;

private:

  std::string candidate;
  std::string sdpMid;
  int sdpMLineIndex;

  friend void kurento::Serialize (std::shared_ptr<kurento::IceCandidate> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __ICE_CANDIDATE_HPP__ */
