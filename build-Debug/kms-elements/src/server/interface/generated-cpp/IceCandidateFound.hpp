/* Autogenerated with kurento-module-creator */

#ifndef __ICE_CANDIDATE_FOUND_HPP__
#define __ICE_CANDIDATE_FOUND_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class IceCandidateFound;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::IceCandidateFound> &object, JsonSerializer &s);
}


namespace kurento
{
class IceCandidate;
} /* kurento */

namespace kurento
{
class IceCandidate;

class IceCandidateFound : public Media
{

public:

  IceCandidateFound (std::shared_ptr<MediaObject> source, const std::string &type, std::shared_ptr<IceCandidate> candidate) : Media (source, type) {
      this->candidate = candidate;
  };

  IceCandidateFound (const IceCandidateFound &copy) : Media (copy) {
      this->candidate = copy.candidate;
  };

  IceCandidateFound (const Json::Value &value);

  virtual void setCandidate (std::shared_ptr<IceCandidate> candidate) {
    this->candidate = candidate;
  };

  virtual std::shared_ptr<IceCandidate> getCandidate () {
    return candidate;
  };

  static std::string getName() {
    return "IceCandidateFound";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  IceCandidateFound() = default;

private:
  std::shared_ptr<IceCandidate> candidate;

  friend void kurento::Serialize (std::shared_ptr<kurento::IceCandidateFound> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __ICE_CANDIDATE_FOUND_HPP__ */
