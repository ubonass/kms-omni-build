/* Autogenerated with kurento-module-creator */

#include "MediaProfileSpecType.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>

namespace kurento
{

MediaProfileSpecType::type MediaProfileSpecType::getValueFromString (const std::string &value)
{

  if (value ==  "WEBM") {
    return WEBM;
  }

  if (value ==  "MKV") {
    return MKV;
  }

  if (value ==  "MP4") {
    return MP4;
  }

  if (value ==  "WEBM_VIDEO_ONLY") {
    return WEBM_VIDEO_ONLY;
  }

  if (value ==  "WEBM_AUDIO_ONLY") {
    return WEBM_AUDIO_ONLY;
  }

  if (value ==  "MKV_VIDEO_ONLY") {
    return MKV_VIDEO_ONLY;
  }

  if (value ==  "MKV_AUDIO_ONLY") {
    return MKV_AUDIO_ONLY;
  }

  if (value ==  "MP4_VIDEO_ONLY") {
    return MP4_VIDEO_ONLY;
  }

  if (value ==  "MP4_AUDIO_ONLY") {
    return MP4_AUDIO_ONLY;
  }

  if (value ==  "JPEG_VIDEO_ONLY") {
    return JPEG_VIDEO_ONLY;
  }

  if (value ==  "KURENTO_SPLIT_RECORDER") {
    return KURENTO_SPLIT_RECORDER;
  }

  throw KurentoException (MARSHALL_ERROR,
                          "Invalid value for 'MediaProfileSpecType'");

}

void MediaProfileSpecType::Serialize (JsonSerializer &s)
{
  if (s.IsWriter) {
    s.JsonValue = getString();
  } else {
    if (s.JsonValue.isConvertibleTo (Json::ValueType::stringValue) ) {
      enumValue = getValueFromString (s.JsonValue.asString() );
    } else {
      throw KurentoException (MARSHALL_ERROR,
                              "'MediaProfileSpecType' type should be a string");
    }
  }
}

} /* kurento */

namespace kurento
{

void
Serialize (std::shared_ptr<kurento::MediaProfileSpecType> &object, JsonSerializer &s)
{
  if (!s.IsWriter && !object) {
    object.reset (new kurento::MediaProfileSpecType() );
  }

  if (object) {
    object->Serialize (s);
  }
}

} /* kurento */