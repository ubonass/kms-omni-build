/* Autogenerated with kurento-module-creator */

#ifndef __PLAYER_ENDPOINT_HPP__
#define __PLAYER_ENDPOINT_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "UriEndpoint.hpp"
#include "EndOfStream.hpp"
#include <sigc++/sigc++.h>

namespace kurento
{
class PlayerEndpoint;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::PlayerEndpoint> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
class VideoInfo;
} /* kurento */

namespace kurento
{
class PlayerEndpoint : public virtual UriEndpoint
{

public:
  PlayerEndpoint() = default;
  ~PlayerEndpoint() override = default;


  virtual void play () = 0;

  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

  virtual std::shared_ptr<VideoInfo> getVideoInfo () = 0;

  virtual std::string getElementGstreamerDot () = 0;

  virtual int64_t getPosition () = 0;
  virtual void setPosition (int64_t position) = 0;

};

} /* kurento */

#endif /*  __PLAYER_ENDPOINT_HPP__ */
