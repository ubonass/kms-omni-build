/* Autogenerated with kurento-module-creator */

#ifndef __ICE_CONNECTION_HPP__
#define __ICE_CONNECTION_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class IceComponentState;
} /* kurento */

namespace kurento
{
class IceConnection;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::IceConnection> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{
class IceComponentState;

class IceConnection : public RegisterParent 
{

public:

  IceConnection (const std::string &streamId, int componentId, std::shared_ptr<IceComponentState> state) {
    this->streamId = streamId;
    this->componentId = componentId;
    this->state = state;
  };

  void setStreamId (const std::string &streamId) {
    this->streamId = streamId;
  };

  std::string getStreamId () {
    return streamId;
  };

  void setComponentId (int componentId) {
    this->componentId = componentId;
  };

  int getComponentId () {
    return componentId;
  };

  void setState (std::shared_ptr<IceComponentState> state) {
    this->state = state;
  };

  std::shared_ptr<IceComponentState> getState () {
    return state;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new IceConnection ();

    };

    RegisterParent::registerType ("kurento.IceConnection", func);
  }

protected:

  IceConnection() = default;

private:

  std::string streamId;
  int componentId;
  std::shared_ptr<IceComponentState> state;

  friend void kurento::Serialize (std::shared_ptr<kurento::IceConnection> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __ICE_CONNECTION_HPP__ */
