/* Autogenerated with kurento-module-creator */

#ifndef __HTTP_POST_ENDPOINT_HPP__
#define __HTTP_POST_ENDPOINT_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "HttpEndpoint.hpp"
#include "EndOfStream.hpp"
#include <sigc++/sigc++.h>

namespace kurento
{
class HttpPostEndpoint;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::HttpPostEndpoint> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
class HttpPostEndpoint : public virtual HttpEndpoint
{

public:
  HttpPostEndpoint() = default;
  ~HttpPostEndpoint() override = default;


  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

};

} /* kurento */

#endif /*  __HTTP_POST_ENDPOINT_HPP__ */
