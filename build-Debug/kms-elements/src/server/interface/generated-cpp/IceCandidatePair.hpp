/* Autogenerated with kurento-module-creator */

#ifndef __ICE_CANDIDATE_PAIR_HPP__
#define __ICE_CANDIDATE_PAIR_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class IceCandidatePair;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::IceCandidatePair> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class IceCandidatePair : public RegisterParent 
{

public:

  IceCandidatePair (const std::string &streamID, int componentID, const std::string &localCandidate, const std::string &remoteCandidate) {
    this->streamID = streamID;
    this->componentID = componentID;
    this->localCandidate = localCandidate;
    this->remoteCandidate = remoteCandidate;
  };

  void setStreamID (const std::string &streamID) {
    this->streamID = streamID;
  };

  std::string getStreamID () {
    return streamID;
  };

  void setComponentID (int componentID) {
    this->componentID = componentID;
  };

  int getComponentID () {
    return componentID;
  };

  void setLocalCandidate (const std::string &localCandidate) {
    this->localCandidate = localCandidate;
  };

  std::string getLocalCandidate () {
    return localCandidate;
  };

  void setRemoteCandidate (const std::string &remoteCandidate) {
    this->remoteCandidate = remoteCandidate;
  };

  std::string getRemoteCandidate () {
    return remoteCandidate;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new IceCandidatePair ();

    };

    RegisterParent::registerType ("kurento.IceCandidatePair", func);
  }

protected:

  IceCandidatePair() = default;

private:

  std::string streamID;
  int componentID;
  std::string localCandidate;
  std::string remoteCandidate;

  friend void kurento::Serialize (std::shared_ptr<kurento::IceCandidatePair> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __ICE_CANDIDATE_PAIR_HPP__ */
