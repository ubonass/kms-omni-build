/* Autogenerated with kurento-module-creator */

#ifndef __ON_DATA_CHANNEL_OPENED_HPP__
#define __ON_DATA_CHANNEL_OPENED_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class OnDataChannelOpened;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::OnDataChannelOpened> &object, JsonSerializer &s);
}


namespace kurento
{

class OnDataChannelOpened : public Media
{

public:

  OnDataChannelOpened (std::shared_ptr<MediaObject> source, const std::string &type, int channelId) : Media (source, type) {
      this->channelId = channelId;
  };

  OnDataChannelOpened (const OnDataChannelOpened &copy) : Media (copy) {
      this->channelId = copy.channelId;
  };

  OnDataChannelOpened (const Json::Value &value);

  virtual void setChannelId (int channelId) {
    this->channelId = channelId;
  };

  virtual int getChannelId () {
    return channelId;
  };

  static std::string getName() {
    return "OnDataChannelOpened";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  OnDataChannelOpened() = default;

private:
  int channelId;

  friend void kurento::Serialize (std::shared_ptr<kurento::OnDataChannelOpened> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __ON_DATA_CHANNEL_OPENED_HPP__ */
