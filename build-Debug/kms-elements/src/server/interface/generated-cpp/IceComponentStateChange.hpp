/* Autogenerated with kurento-module-creator */

#ifndef __ICE_COMPONENT_STATE_CHANGE_HPP__
#define __ICE_COMPONENT_STATE_CHANGE_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class IceComponentStateChange;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::IceComponentStateChange> &object, JsonSerializer &s);
}


namespace kurento
{
class IceComponentState;
} /* kurento */

namespace kurento
{
class IceComponentState;

class IceComponentStateChange : public Media
{

public:

  IceComponentStateChange (std::shared_ptr<MediaObject> source, const std::string &type, int streamId, int componentId, std::shared_ptr<IceComponentState> state) : Media (source, type) {
      this->streamId = streamId;
      this->componentId = componentId;
      this->state = state;
  };

  IceComponentStateChange (const IceComponentStateChange &copy) : Media (copy) {
      this->streamId = copy.streamId;
      this->componentId = copy.componentId;
      this->state = copy.state;
  };

  IceComponentStateChange (const Json::Value &value);

  virtual void setStreamId (int streamId) {
    this->streamId = streamId;
  };

  virtual int getStreamId () {
    return streamId;
  };

  virtual void setComponentId (int componentId) {
    this->componentId = componentId;
  };

  virtual int getComponentId () {
    return componentId;
  };

  virtual void setState (std::shared_ptr<IceComponentState> state) {
    this->state = state;
  };

  virtual std::shared_ptr<IceComponentState> getState () {
    return state;
  };

  static std::string getName() {
    return "IceComponentStateChange";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  IceComponentStateChange() = default;

private:
  int streamId;
  int componentId;
  std::shared_ptr<IceComponentState> state;

  friend void kurento::Serialize (std::shared_ptr<kurento::IceComponentStateChange> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __ICE_COMPONENT_STATE_CHANGE_HPP__ */
