/* Autogenerated with kurento-module-creator */

#ifndef __DATA_CHANNEL_OPEN_HPP__
#define __DATA_CHANNEL_OPEN_HPP__

#include <json/json.h>
#include <memory>
#include "Media.hpp"

namespace kurento
{
class DataChannelOpen;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::DataChannelOpen> &object, JsonSerializer &s);
}


namespace kurento
{

class DataChannelOpen : public Media
{

public:

  DataChannelOpen (std::shared_ptr<MediaObject> source, const std::string &type, int channelId) : Media (source, type) {
      this->channelId = channelId;
  };

  DataChannelOpen (const DataChannelOpen &copy) : Media (copy) {
      this->channelId = copy.channelId;
  };

  DataChannelOpen (const Json::Value &value);

  virtual void setChannelId (int channelId) {
    this->channelId = channelId;
  };

  virtual int getChannelId () {
    return channelId;
  };

  static std::string getName() {
    return "DataChannelOpen";
  }

  void Serialize (JsonSerializer &s) override;

protected:

  DataChannelOpen() = default;

private:
  int channelId;

  friend void kurento::Serialize (std::shared_ptr<kurento::DataChannelOpen> &event, JsonSerializer &s);
};

} /* kurento */

#endif /*  __DATA_CHANNEL_OPEN_HPP__ */
